// Media query function, this provide also variable setup, which make use all grids much more comfortable.
// You have your variables set to right valuse at time you call mediaquery.
// It is possible to add some other functions which you need to be set up in current screen "size".

// syntax:  @include size(C) { ... }

// globals
$current_size: A;
$current_min_width: 100%;
$inside_mq: false;

// rows
$total_width_A: 100%;
$total_width_B: 620px;
$total_width_C: 940px;
$total_width_D: 1200px;
$total_width: $total_width_A;


@function _get_range_of_sizes($starting_size) {
    @if $starting_size == A {
        @return (A, B, C, D)
    }
    @if $starting_size == B {
        @return (B, C, D)
    }
    @if $starting_size == C {
        @return (C, D)
    }
    @if $starting_size == D {
        @return (D)
    }

    @else {
        @return ($starting_size)
    }
}

@mixin _sizeCore($size) {

    // default values (equal to A)
    $inside_mq: true;
    $min-width-default: 100%;
    $query-string-default: "only screen";
    $query-string: $query-string-default;

    @if $size == A {
        // Variable setup for size A
        $current_size: A;
        $total_width: $total_width_A;
        $current_min_width: 100%;
        $query-string: "only screen";
    } @else if $size == B {
        // Variable setup for size B
        $current_size: B;
        $total_width: $total_width_B;
        $current_min_width: 675px;
        $query-string: "only screen and (min-width: #{$current_min_width}), print";
    } @else if $size == C {
        // Variable setup for size C
        $current_size: C;
        $total_width: $total_width_C;
        $current_min_width: 1023px;
        $query-string: "only screen and (min-width: #{$current_min_width} )";
    } @else if $size == D {
        // Variable setup for size C
        $current_size: D;
        $total_width: $total_width_D;
        $current_min_width: 1200px;
        $query-string: "only screen and (min-width: #{$current_min_width} )";
    } @else if $size == A-only {
        // Variable setup for size A
        $current_size: A;
        $total_width: $total_width_A;
        $current_min_width: 675px - 1;
        $query-string: "only screen and (max-width: #{$current_min_width} )";
    } @else if $size == B-only {
        // Variable setup for size B
        $current_size: B;
        $total_width: $total_width_B;
        $current_min_width: 675px;
        $current_max_width: 1023px - 1;
        $query-string: "only screen and (min-width: #{$current_min_width}) and (max-width: #{$current_max_width}), print";
    } @else if $size == C-only {
        // Variable setup for size C
        $current_size: C;
        $total_width: $total_width_C;
        $current_min_width: 1023px;
        $current_max_width: 1200px - 1;
        $query-string: "only screen and (min-width: #{$current_min_width}) and (max-width: #{$current_max_width} )";
    } @else if $size == D-only {
        // Variable setup for size C
        $current_size: D;
        $total_width: $total_width_D;
        $current_min_width: 1200px;
        $query-string: "only screen and (min-width: #{$current_min_width}))";
    }

    @media #{$query-string} {
        @content;
    }

    // reset defaults
    $inside_mq: false;
    $current_size: A;
    $total_width: $total_width_A;
    $query-string: $query-string-default;
}


/**
 * This is our media query mixin!!!!
 *
 * Use with a single value for the creation of a traditional media query:
 *
 * @include size(B) {
 *    // your code that will apply to all media sizes B and above
 * }
 *
 * Use with a list of values for the creation of a media query for each of those values,
 * useful when you want access to global variables that change at different sizes:
 *
 * @include size((C, D)) {
 *    width: calc($total_width - 80px) // will work with the total width at both sizes C + D.
 * }
 *
 */
@mixin size($size) {

    // Loop over each size and create a media query for it.
    @if type-of($size) == list {
        $sizes: $size;
        @each $_size in $sizes {
            @include _sizeCore($_size) {
                @content;
            }
        }
    }

    // Default size handling (creates a single media query)
    @if type-of($size) == string {
        @include _sizeCore($size) {
            @content;
        }
    }
}




