// color code setup

//@todo replace skin by maps only

$color-primary: #c20e1a;
$color-primary-light: lighten($color-primary, 10%);
$color-primary-dark: darken($color-primary, 10%);

$color-secondary: #b5bbb4;
$color-secondary-light: lighten($color-secondary, 10%);
$color-secondary-dark: darken($color-secondary, 10%);

// color base text
$color-black: #000;
$color-white: #fff;

$color-body-font: #363636; //#474747;
$color-body-bg: #FDFDFD;

$color-selection: rgb(176, 214, 253);

// color custom schema

$pallete: (
        "1": #7ab929,
        "2": #6dc1ae,
        "3": #4e9ed8,
        "4": #7d83bf,
        "5": #9c6fae,
        "6": #e8308a,
        "7": #e50051,
        "8": #ec6608,
        "9": #f4b003,
        "10": #b5bbb4,
        "primary": $color-primary,
        "primary-light": $color-primary,
        "primary-dark": $color-primary,
        "secondary": $color-secondary,
        "secondary-light": $color-secondary-light,
        "secondary-dark": $color-secondary-light,
        "black": $color-black,
        "white": $color-white,
        "body-font": $color-body-font,
        "body": $color-body-bg
);

@function pallete($key) {
    @return map-get($pallete, $key);
}

// colors

@each $colorName, $colorValue in $pallete {
    .c-#{$colorName} {
        color: $colorValue;
    }
}

// bg colors
@each $colorName, $colorValue in $pallete {
    .bg-#{$colorName} {
        background-color: $colorValue;
    }
}
